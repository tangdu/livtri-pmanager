package com.livtrip.webservice.hotel;

import com.livtrip.config.HotelPropertyConfigurer;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by Apache CXF 3.1.8
 * 2016-12-05T13:14:55.029+08:00
 * Generated source version: 3.1.8
 * 
 */
@WebServiceClient(name = "HotelFlow", 
                  wsdlLocation = "",
                  targetNamespace = "http://tempuri.org/") 
public class HotelFlow extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "HotelFlow");
    public final static QName BasicHttpBindingIHotelFlow = new QName("http://tempuri.org/", "BasicHttpBinding_IHotelFlow");
    static {
        URL url = null;
        try {
            url = new URL(HotelPropertyConfigurer.GETHOTELFLOWWSDL);
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(HotelFlow.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/Users/tangdu/mywork/lispace/livtrip/tools/livtrip-common/src/main/resources/tourico_hotel.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public HotelFlow(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public HotelFlow(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HotelFlow() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public HotelFlow(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public HotelFlow(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public HotelFlow(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns IHotelFlow
     */
    @WebEndpoint(name = "BasicHttpBinding_IHotelFlow")
    public IHotelFlow getBasicHttpBindingIHotelFlow() {
        return super.getPort(BasicHttpBindingIHotelFlow, IHotelFlow.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IHotelFlow
     */
    @WebEndpoint(name = "BasicHttpBinding_IHotelFlow")
    public IHotelFlow getBasicHttpBindingIHotelFlow(WebServiceFeature... features) {
        return super.getPort(BasicHttpBindingIHotelFlow, IHotelFlow.class, features);
    }

}
