package com.livtrip.webservice.destination;

import com.livtrip.config.HotelPropertyConfigurer;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.8
 * 2016-12-08T17:41:16.433+08:00
 * Generated source version: 3.1.8
 */
@WebServiceClient(name = "WSDestinationService",
        wsdlLocation = "",
        targetNamespace = "http://tempuri.org/")
public class WSDestinationService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "WSDestinationService");
    public final static QName IISDestinationHosting = new QName("http://tempuri.org/", "IIS_DestinationHosting");

    static {
        URL url = null;
        try {
            url = new URL(HotelPropertyConfigurer.GETDESTINATIONWSDL);
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(WSDestinationService.class.getName())
                    .log(java.util.logging.Level.INFO,
                            "Can not initialize the default wsdl from {0}", "file:/Users/tangdu/mywork/lispace/livtripmanager/trip-common/src/main/java/com/livtip/webservice/hotel/tourico_destinations.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public WSDestinationService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WSDestinationService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSDestinationService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public WSDestinationService(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public WSDestinationService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public WSDestinationService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }


    /**
     * @return returns IDestinationContracts
     */
    @WebEndpoint(name = "IIS_DestinationHosting")
    public IDestinationContracts getIISDestinationHosting() {
        return super.getPort(IISDestinationHosting, IDestinationContracts.class);
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns IDestinationContracts
     */
    @WebEndpoint(name = "IIS_DestinationHosting")
    public IDestinationContracts getIISDestinationHosting(WebServiceFeature... features) {
        return super.getPort(IISDestinationHosting, IDestinationContracts.class, features);
    }

}
